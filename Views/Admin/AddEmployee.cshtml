@model TCSProject.Models.Employee
@{
    if (Session["AdmId"] == null)
    {
        Response.Redirect("~/Employee/Login");
    }
    Layout = null;
}
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<link href="https://fonts.googleapis.com/css2?family=Montserrat&display=swap" rel="stylesheet">
<link href="https://use.fontawesome.com/releases/v5.0.8/css/all.css" rel="stylesheet" />
<link href="~/Content/Site.css" rel="stylesheet" />

<div class="main-menu">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="#">Welcome <strong>@Session["AdmId"] !</strong></a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>



        <div class="collapse navbar-collapse" id="navbarNavDropdown">
            <div class="mr-auto"></div>
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Home","Admin")">Home </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("ViewEmployee","Admin")">Search</a>
                </li>
                <li class="nav-item dropdown active">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Actions
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                        <a class="dropdown-item active" href="#">Add Employee <span class="sr-only">(current)</span></a>
                        <a class="dropdown-item" href="@Url.Action("DeleteEmployee","Admin")">Remove Employee</a>
                        <a class="dropdown-item" href="@Url.Action("UpdateEmployeeDetails","Admin")">Update details</a>
                    </div>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Report","Admin")">Report</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Upload","Admin")">Upload</a>
                </li>
                <li class="nav-item ">
                    <a class="nav-link" href="@Url.Action("Logout","Employee")">Logout <i title="Logout" class="fas fa-sign-out-alt fa-lg"></i></a>
                </li>
            </ul>
        </div>
    </nav>



</div>





@if (ViewBag.AddEmpStatus != null)

{

    
    if (ViewBag.AddEmpStatus == true)
    {
        <div class="container">
            <div class="alert alert-success" role="alert">
                @ViewBag.Message
            </div>
        </div>
    }
    else
    {
        <div class="container pt-2">
            <div class="alert alert-danger pt-2" role="alert">
                @ViewBag.Message
            </div>
        </div>
    }

}
@using (Html.BeginForm())
{

    <div class="form-horizontal text-center myClass">
        <h4 class="text-success">Add Employee</h4>
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <table class="table table-bordered table-hover">
        <tr style="background: #6fcf99;">
            <th>
                &nbsp;&nbsp; Employee
            </th>
            <th>
                Details to be filled
            </th>
        </tr>
        <tr>

            <td>

                @Html.LabelFor(model => model.EmpId, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>

                @Html.EditorFor(model => model.EmpId, new { htmlAttributes = new { @class = "form-control", placeholder = "Employee ID", required = "required" } })
                @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>

            <td>

                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>

                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First name", required = "required" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>

                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>

                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last name", required = "required" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email", required = "required" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.ProjectId, new { htmlAttributes = new { @class = "form-control", placeholder = "Project ID", required = "required" } })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </td>
        </tr>




        <tr>
            <td>
                @Html.LabelFor(model => model.WONNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.WONNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "WON Number", required = "required" } })
                @Html.ValidationMessageFor(model => model.WONNumber, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.ProjectDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.ProjectDetails, new { htmlAttributes = new { @class = "form-control", placeholder = "Project Details", required = "required" } })
                @Html.ValidationMessageFor(model => model.ProjectDetails, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.AssetId, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.AssetId, new { htmlAttributes = new { @class = "form-control", placeholder = "Asset ID", required = "required" } })
                @Html.ValidationMessageFor(model => model.AssetId, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.TokenId, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.TokenId, new { htmlAttributes = new { @class = "form-control", placeholder = "Token ID", required = "required" } })
                @Html.ValidationMessageFor(model => model.TokenId, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", placeholder = "Location", required = "required" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </td>
        </tr>


        <tr>
            <td colspan="2" class="text-center">

                <input class="btn btn-outline-success my-2 my-sm-0" type="submit" value="Add Employee" />
            </td>
        </tr>

    </table>
    </div>
}





<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
